死循环
    while(true)
    for(;;)
java format output
    %s
    %u

java变量命名规则
    数字， 字母， '$', '_'

long赋值加L
    long date = 365L * 60 * 60 * 1000 * 92834824 //第一个数加L

浮点数赋值默认是double, 想声明成float末尾加f或F, 

float 与double的区别， 精度不同， 都有舍入误差

输出数据类型可存储的最大， 最小值
    Integer.MAX_VALUE
    Integer.MIN_VALUE

char类型赋值必须用单引号

do while 需要用分号结束

java变量只声明不初始化
    局部变量： 无默认值
    实例变量： 有默认值
        String default "null"
        int default '0'

java打印整个数组  println(Arrays.toString(arr))

java 遍历hashmap
    Iterator

java 数组
    声明赋值
    增删查改
    扩容缩小
    拷贝

访问修饰符， 非访问修饰符

java builtin class
    Math

get random number
    //1
    java.util.Random
    Random r = new Random()
    r.nextInt()
    //2
    int r = (int)(Math.random() * 10);

退出程序
    java System.exit(1)

int a = true?value1:value2; 三目运算符

java 数组不支持负数下标

使用封装有三大好处：
    良好的封装能够减少耦合。
    类内部的结构可以自由修改。
    可以对成员进行更精确的控制。
    隐藏信息，实现细节。

基本数据类型与字符串类型相加， 返回字符串


数组声明的几种方式
    int[] arr; arr = new int[]{1, 2, 3}
    int[] arr = new int[10];
    int[] arr = {1, 2, 3};
    int[] arr = new int[]{1, 2, 3};



object.getClass().getName()

java无法获取变量的内存地址， hashcode()不等于内存地址

变量分为值类型， 引用类型
equals() 与 '==' 的区别
Arrays.equals(arr1, arr2);

java数组不支持负数索引


Integer是类， int是基本数据类型
Integer a = new Integer(1); int b = 1;
ArrayList 只能存放object， 因此不能add(int), 可以add(Integer)

当需要往ArrayList，HashMap中放东西时，像int，double这种内建类型是放不进去的，因为容器都是装object的，这是就需要这些内建类型的外覆类了。 


class A{} ; A a = new A();
a instanceof  A  -->true
A.class.isInstance(a) -->true
a.getClass().isInstance(a)  -->true
