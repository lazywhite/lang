<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringModelInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"

       xsi:schemaLocation="
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd"
       default-lazy-init="true">

    <!--bean手动配置-->
    <!--<bean id="userHBMDao" claUserHBMDaoMDao" lazy-init="true" />-->
    <!--<bean id="userMybatisDao" claUserMybatisDaosDao" scope="singleton"-->
          <!--init-method="init" destroy-method="destroy" lazy-init="true"/>-->
    <!--<bean id="userServiceImpl" claUserServiceImplImpl">-->
        <!--<property name="userDao">-->
            <!--<ref bean="userMybatisDao" />-->
        <!--</property>-->
        <!--<property name="name" value="user service" />-->
    <!--</bean>-->

    <!--<bean id="userDao" claUserDaorDao" abstract="true" />-->


    <!--<bean claArticleMybatisDaosDao" id="articleMybatisDao"/>-->
    <!--<bean claArticleServiceImplImpl" id="articleService" >-->
        <!--<constructor-arg  index="0"> &lt;!&ndash; 如果参数只要一个, index可省略 &ndash;&gt;-->
            <!--<ref bean="articleMybatisDao" />-->
        <!--</constructor-arg>-->
    <!--</bean>-->

    <!--<bean claArticleMybatisDaosDao" id="articleMybatisDao"/>-->
    <!--<bean claArticleServiceImplImpl" id="articleService" autowire="byName" />-->

    <!--<bean id="cal" class="java.util.GregorianCalendar" factory-method="getInstance"></bean>-->
    <!--<bean id="date" class="java.util.Date" factory-bean="cal"  factory-method="getTime"></bean>-->

    <!--注解扫描-->
    <context:component-scan base-package="com.local.spring" >
        <!--<context:exclude-filter type="" expression="" -->
        <!--<context:include-filter type="" expression=""-->
    </context:component-scan>

    <!--启用AOP自动代理-->
    <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
    <aop:config>
        <aop:aspect ref="loggingAspect" >
               <!--只包含service包里的所有类, 不包括子包-->
            <!--<aop:pointcut id="services" expression="execution(public * com.local.spring.service.*.*(..))" />-->
            <aop:pointcut id="userPoint" expression="execution(public * com.local.spring.service.impl.UserServiceImpl.*(..))" />
            <aop:pointcut id="articlePoint" expression="execution(public * com.local.spring.service.impl.ArticleServiceImpl.*(..))" />
            <!--包含service下所有类及子包的所有类-->
            <!--<aop:pointcut id="logging" expression="execution(public * com.local.spring.service..*(..))" />-->

            <!--前置通知-->
            <aop:before method="before"  pointcut-ref="userPoint" />
            <!--最终通知-->
            <!--<aop:after-returning method=""  >-->
            <!--最终通知-->
            <aop:after method="after" pointcut-ref="userPoint" />
            <!--环绕通知-->
            <aop:around method="around" pointcut-ref="articlePoint" />

            <!--异常通知-->
            <!--<aop:after-throwing method=""-->
        </aop:aspect>
    </aop:config>
</beans>