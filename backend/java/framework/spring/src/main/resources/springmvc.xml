<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringModelInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"

       xsi:schemaLocation="
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd"
       default-lazy-init="true">

    <context:component-scan base-package="com.local.spring" />
    <aop:aspectj-autoproxy proxy-target-class="true" />
    <!--mvc 注解驱动-->
    <!--1. 引入了基于注解的映射器和适配器-->
    <!--2. 支持自定义类型转换器-->
    <!--3. 支持json的注解响应 @ResponseBody-->
    <mvc:default-servlet-handler/>
    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:message-converters register-defaults="true">
            <ref bean="jsonHttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/anno/*" />
            <bean class="com.local.spring.interceptor.TestInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <ref bean="localeChangeInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--不配置的话静态资源仍然走核心控制器, 导致404-->
    <mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/css/**" location="/css/" />


    <!--======== 适配器, 映射器配置============-->
    <!--配置第一种适配器对象, 只能调用实现了Controller接口的对象-->
    <!--<bean id="handlerAdaptor" class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" ></bean>-->

    <!--配置第二种适配器, 只能调动实现了HttpRequestHandler接口的对象-->
    <!--<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter" />-->

    <!--配置第一种映射器 -->
    <!--<bean id="mappingHanlder" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">-->
    <!--<property name="mappings">-->
    <!--<props>-->
    <!--<prop key="test.do">testHandler</prop>-->
    <!--<prop key="http.do">httpHandler</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->

    <!--<bean id="testHandler" class="com.local.spring.handler.TestHandler">-->
    <!--</bean>-->

    <!--第二种映射器-->
    <!--<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />-->

    <!--<bean id="testHandler" class="com.local.spring.handler.TestHandler" name="/test.do">-->
    <!--<property name="hello">-->
    <!--<value>xml注入</value>-->
    <!--</property>-->
    <!--</bean>-->

    <!--第三种适配器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />-->
    <!--第三种映射器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />-->


    <!--jsp视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        <property name="prefix" value="/jsp" />
        <property name="suffix" value=".jsp" />
    </bean>


    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <set>
                <bean class="com.local.spring.formatter.DateFormatter" />
            </set>
        </property>
    </bean>
    <bean id="jsonHttpMessageConverter"
          class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="fastJsonConfig" ref="fastJsonConverterConfig"/>
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!--配置 fastjson 不要忽略 null 值-->
    <bean id="fastJsonConverterConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
        <property name="serializerFeatures">
            <list>
                <value type="com.alibaba.fastjson.serializer.SerializerFeature">WriteMapNullValue</value>
                <value type="com.alibaba.fastjson.serializer.SerializerFeature">WriteDateUseDateFormat</value>
                <value type="com.alibaba.fastjson.serializer.SerializerFeature">WriteEnumUsingToString</value>
                <value type="com.alibaba.fastjson.serializer.SerializerFeature">QuoteFieldNames</value>
            </list>
        </property>
    </bean>


    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
        <property name="maxUploadSize" value="20000000" />
    </bean>

    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="zh_CN"/>
    </bean>
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n/message"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    
    <!--<import resource="spring-thymeleaf.xml" />-->

</beans>
