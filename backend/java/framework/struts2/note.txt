
前身 webwork
    struts1(apache), 扩展性较差

struts2 = webwork框架 + struts1生态系统

what when where how


mvc: 分层思想
    controller 控制器， 负责分发请求
    model 业务模型， 负责处理业务逻辑
    view 呈现业务数据

dispatcher
    struts.xml
    url = hello
        HelloAction class
            sayHello method
                result

url <--> action

el表达式在struts2里面也可以使用


action
    基本属性注入
    域属性注入
        form
            input name="user.name" 

action
    input属性
    output属性

${action.user}

get方式解决乱码
    server.xml
        Connector URIEncoding="UTF-8"
    
StrutsTypeConverter可以自定义属性转换器
'2012/12/12' 默认类型转换器不支持转换此类型为Date


struts.xml
    配置url和action的对应关系
    action method属性默认值是execute
    result 默认是success

    result 
        name 
        type
            chain: 转发到action
            dispatcher: 转发
            redirect: 无法获取action的属性值
            freemaker
            redirectAction: 重定向到其他action, 可以通过配置携带参数
            stream: 字节形式返回
            json

action方法必须是无参的并返回string

<result type="stream">
    <param name="inputStream">inputStream</param>
    <param name="contentDisposition">attachment:filename=${filename}</param>
    <param name="contentType">inputStream</param>
    <param name="bufferSize">5*1024</param> //5K字节
    
struts.xml 可以include其他xml来实现多配置文件开发
访问action的不同方法
    list!listUser.action
    <action name="listUser" class="controller.User" method="listUser">

全局result
    struts
        package
            global-results
                <result name="oneResult">/onResult.jsp</result>

package
    @namespace
/emp/ 路径省略

获取request, session, application对象的三种方式
    1. ActionContext
    2. ServletActionContext
    3. implements RequestAware, SessionAware, ApplicationAware
    ${sessionScope.key}

ognl表达式只能在标签里面用
标签
    <s:if test="">
    <s:elsif test="">
    <s:else>
    <s:iterator begin="" end="" step="">
    <s:iterator value="" var="" status="">
    <s:property value="">   
    <s:a action="" namespace="">
    <s:select>

html标签
    <s:doubleselect>
    <s:form>
    <s:file>
    <s:textfield>
 
session是Map<String, Object>的, 所以取出的东西要强转
拦截器
    1. 编写公共代码
    2. 根据url地址或参数决定是否调用action

如果action没有配置拦截器, 则会配置一个默认的拦截器栈defaultStack
一旦配置了一个拦截器, 就不会再提供了, 需要手动配置

ognl: 对象图导航语言
    提供一个对象, 然后获取对象中的属性值进行运算
    valueStack
        root区: 栈结构, 主要存放action对象, 会将当前正在使用的action对象压入栈顶
        context区: map结构, 主要存放request, session, application对象
        ognl引擎: 执行ognl表达式,  有"#"前缀去context查找值 没有去root区栈顶查找,             
国际化
    在src/struts.properties里规定使用的i18n文件
    src/i18n/struts-message-zh.properties, 中文内容必须转换为unicode
